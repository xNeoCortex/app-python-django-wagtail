name: Wagtail CI

on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Our test suite should cover:
# - all supported databases against current Python and Django
# - at least one test run for each older supported version of Python and Django
# - at least one test run for each supported Elasticsearch version
# - a test run against Django's git main and active stable branch (allowing failures)
# - test runs with USE_EMAIL_USER_MODEL=yes and DISABLE_TIMEZONE=yes

# Current configuration:
# - django 4.2, python 3.8, postgres:12, parallel
# - django 4.2, python 3.9, mysql:8.0
# - django 4.2, python 3.10, sqlite
# - django 5.0, python 3.12, mysql:8.1, parallel
# - django 5.0, python 3.11, postgres:12, parallel, USE_EMAIL_USER_MODEL=yes
# - django 5.0, python 3.12, postgres:15, parallel, DISABLE_TIMEZONE=yes
# - django stable/5.0.x, python 3.10, postgres (allow failures)
# - django main, python 3.10, postgres:latest, parallel (allow failures)
# - elasticsearch 7, django 4.2, python 3.8, postgres:latest
# - opensearch 2, django 4.2, python 3.9, sqlite
# - elasticsearch 8, django 5.0, python 3.10, sqlite, USE_EMAIL_USER_MODEL=yes

# Some tests are run in parallel by passing --parallel to runtests.py.
# When running tests in parallel, some errors cannot be pickled and result in
# non-helpful tracebacks (see https://code.djangoproject.com/ticket/29023).
# Thus, we keep one test run without --parallel for each supported database.
# ElasticSearch tests are not run in parallel as the test suite is not thread-safe.

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: '3.10'
            django: 'Django>=4.2,<4.3'

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[testing]' --config-settings editable_mode=strict
          pip install "${{ matrix.django }}"
      - name: Test
        run: |
          WAGTAIL_FAIL_ON_VERSIONED_STATIC=1 DJANGO_SETTINGS_MODULE=wagtail.test.settings django-admin check
          coverage run --parallel-mode --source wagtail runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.sqlite3
      - name: Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage.*

  test-postgres:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        include:
          - python: '3.12'
            django: 'Django>=5.0,<5.1'
            postgres: 'postgres:15'
            notz: notz
            experimental: false
            parallel: '--parallel'
          

    services:
      postgres:
        image: ${{ matrix.postgres || 'postgres:12' }}
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg2>=2.6"
          pip install -e '.[testing]' --config-settings editable_mode=strict
          pip install "${{ matrix.django }}"
          ${{ matrix.install_extras }}
      - name: Test
        run: |
          WAGTAIL_FAIL_ON_VERSIONED_STATIC=1 DJANGO_SETTINGS_MODULE=wagtail.test.settings django-admin check
          coverage run --parallel-mode --source wagtail runtests.py ${{ matrix.parallel }}
        env:
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}
          DISABLE_TIMEZONE: ${{ matrix.notz }}
      - name: Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage.*